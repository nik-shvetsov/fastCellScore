from pathlib import Path
from dotenv import dotenv_values
from roi_segment.profiles import PROFILES
from roi_segment.augs import ATF


ENV_CONFIG = dotenv_values(Path(Path(__file__).resolve().parent, ".env"))
SAVE_DIR = Path("models")

PROFILE_ID = ENV_CONFIG["PROFILE_ID"]
WSI_DIR = ENV_CONFIG["WSI_DIR"]
ITN_DIR = ENV_CONFIG["ITN_DIR"]

SMP_MODEL = PROFILES[PROFILE_ID]["SMP_MODEL"]
ENCODER_NAME = PROFILES[PROFILE_ID]["ENCODER_NAME"]
WEIGHTS = PROFILES[PROFILE_ID]["WEIGHTS"]
MODEL_PARAMS = PROFILES[PROFILE_ID]["MODEL_PARAMS"]
IN_CHANNELS = PROFILES[PROFILE_ID]["IN_CHANNELS"]
NUM_CLASSES = PROFILES[PROFILE_ID]["NUM_CLASSES"]
MAX_NUM_EPOCHS = PROFILES[PROFILE_ID]["MAX_NUM_EPOCHS"]
BATCH_SIZE = PROFILES[PROFILE_ID]["BATCH_SIZE"]
ACCUM_GRAD_BATCHES = PROFILES[PROFILE_ID]["ACCUM_GRAD_BATCHES"]
USE_AMP = PROFILES[PROFILE_ID]["USE_AMP"]
USE_GRAD_SCALER = PROFILES[PROFILE_ID]["USE_GRAD_SCALER"]
EARLY_STOP_PATIENCE = PROFILES[PROFILE_ID]["EARLY_STOP_PATIENCE"]
OPTIMIZER = PROFILES[PROFILE_ID]["OPTIMIZER"]
OPTIMIZER_PARAMS = PROFILES[PROFILE_ID]["OPTIMIZER_PARAMS"]
SCHEDULER = PROFILES[PROFILE_ID]["SCHEDULER"]
SCHEDULER_PARAMS = PROFILES[PROFILE_ID]["SCHEDULER_PARAMS"]
CRITERTION = PROFILES[PROFILE_ID]["CRITERTION"]

INPUT_SIZE = PROFILES[PROFILE_ID]["INPUT_SIZE"]
NUM_WORKERS = PROFILES[PROFILE_ID]["NUM_WORKERS"]
PREPROC = PROFILES[PROFILE_ID]["PREPROC"]
AUGMENT = PROFILES[PROFILE_ID]["AUGMENT"]

ACCELERATOR = PROFILES[PROFILE_ID]["ACCELERATOR"]
MATMUL_PRECISION = PROFILES[PROFILE_ID]["MATMUL_PRECISION"]
CUDNN_BENCHMARK = PROFILES[PROFILE_ID]["CUDNN_BENCHMARK"]
CUDNN_DETERMINISTIC = PROFILES[PROFILE_ID]["CUDNN_DETERMINISTIC"]
